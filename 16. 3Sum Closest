Total Accepted: 126127
Total Submissions: 408613
Difficulty: Medium
Contributor: LeetCode
Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
Subscribe to see which companies asked this question.

Hide Tags Array Two Pointers
Hide Similar Problems (M) 3Sum (M) 3Sum Smaller

**********************88

class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int rem2, error;
        int beg, end;
        int n = nums.size();
        if(n < 3) throw range_error("less than 3 elements");
        int minError = nums[0] + nums[1] + nums[2] - target;
        
        sort(nums.begin(), nums.end());
        for(int i = 0; i < n-2; ){
            beg = i + 1; end = n-1;
            while(beg < end){
                error = nums[i] + nums[beg] + nums[end] - target;
                if(abs(error) < abs(minError))
                    minError = error;
                if(error < 0) {++beg; continue;}
                else if(error > 0) {--end; continue;}
                else return target;
            }
            //Reduce the strength of inner loop
            ++i;
            while(i < n-2 && nums[i] == nums[i-1]) ++i;
        }
        
        return minError + target;
    }
};
