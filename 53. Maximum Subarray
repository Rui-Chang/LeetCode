Total Accepted: 195438
Total Submissions: 496454
Difficulty: Easy
Contributor: LeetCode
Find the contiguous subarray within an array (containing at least one number) which has the largest sum.

For example, given the array [-2,1,-3,4,-1,2,1,-5,4],
the contiguous subarray [4,-1,2,1] has the largest sum = 6.

click to show more practice.

Subscribe to see which companies asked this question.

Hide Tags Array Dynamic Programming Divide and Conquer
Hide Similar Problems (E) Best Time to Buy and Sell Stock (M) Maximum Product Subarray

*****************************

class Solution {
public:
//For the contiguous subarray type problems.
//opt_res[i] is a[i] or a[i] compound with opt_res[i-1].
//For this, it is 1) a[i] when pre[i-1] <=0,
//or 2) pre[i-1]+a[i] when pre[i-1] > 0.
    int maxSubArray(vector<int>& nums) {
        if(nums.empty()) return 0;
        int presum = nums[0], maxsum = nums[0];
        for(int i = 1; i < nums.size(); ++i){
            presum = (presum > 0)? presum + nums[i]: nums[i];
            maxsum = max(maxsum, presum);
        }
        return maxsum;
    }
};
